{"version":3,"sources":["components/Wish/WishHeader.js","components/Wish/Banner.js","components/Wish/DoneMessage.js","components/SendButton/SendButton.js","components/Wish/WishForm.js","components/SocialShare/SocialShare.js","components/Wish/WishCounter.js","components/Wish/TipAccordion.js","components/Wish/Wish.js","App.js","serviceWorker.js","index.js"],"names":["WishHeader","isWishSent","this","props","isWishFormInFocus","title","react_default","a","createElement","className","React","Component","Banner","yaScript","document","setAttribute","innerHTML","head","appendChild","isShown","appendYaRTB","id","DoneMessage","e","preventDefault","updateWishSentStatus","doneText","message","done","againText","again","href","onClick","sendAgain","bind","Wish_Banner","SendButton","height","viewBox","width","xmlns","d","cx","cy","r","WishForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","executeCaptcha","recaptchaRef","current","execute","state","wish","handleFocus","assertThisInitialized","handleBlur","handleWishChange","sendWish","createRef","axios","defaults","headers","post","setState","target","value","updateWishFormFocus","wishType","ym","concat","clientId","window","getClientID","reCaptchaResponse","getValue","text","external_user_id","recaptcha_token","then","response","console","log","catch","error","reset","placeholderText","placeholder","onSubmit","type","onChange","onFocus","onBlur","es","ref","sitekey","size","theme","disabled","components_SendButton_SendButton","SocialShare","isHide","socialTitle","social","socialText","data-services","data-title","data-description","WishCounter","recipient","wishCount","components_SocialShare_SocialShare","TipAccordion","collapsed","uncollapse","tipText","tip","tipTitle","Wish","wishFormInFocus","wishSent","loadWishesCounter","status","inFocus","_this2","get","count","data","rootDivClassName","Wish_WishHeader","topTitle","Wish_DoneMessage","doneMessage","Wish_WishForm","wishInputPlaceholder","Wish_WishCounter","Wish_TipAccordion","App","originalContext","newYearContext","Switch","Route","path","exact","key","render","components_Wish_Wish","Boolean","location","hostname","match","ReactDOM","Fragment","lib","accounts","options","webvisor","BrowserRouter","basename","process","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bef53649.chunk.js","sourcesContent":["import React from 'react';\n\nclass WishHeader extends React.Component {\n  render() {\n    var isWishSent = this.props.isWishSent;\n    var isWishFormInFocus = this.props.isWishFormInFocus;\n    var title = this.props.title;\n\n    return (\n      <h1 className={'container-header ' + (isWishSent ? 'done ': '') + (isWishFormInFocus ? 'input-focus ': '')}>\n      {(isWishSent ? 'Готово' : title )}\n      </h1>\n    );\n  }\n}\n\nexport default WishHeader;\n","import React from 'react';\n\nclass Banner extends React.Component {\n  appendYaRTB() {\n      const yaScript = document.createElement('script');\n      yaScript.setAttribute('type', 'text/javascript');\n      yaScript.innerHTML = `(function(w, d, n, s, t) {\n            w[n] = w[n] || [];\n            w[n].push(function() {\n                Ya.Context.AdvManager.render({\n                    blockId: \"R-A-292666-1\",\n                    renderTo: \"yandex_rtb_R-A-292666-1\",\n                    async: true\n                });\n            });\n            t = d.getElementsByTagName(\"script\")[0];\n            s = d.createElement(\"script\");\n            s.type = \"text/javascript\";\n            s.src = \"//an.yandex.ru/system/context.js\";\n            s.async = true;\n            t.parentNode.insertBefore(s, t);\n        })(this, this.document, \"yandexContextAsyncCallbacks\");`\n\n      document.head.appendChild(yaScript);\n  }\n\n  render() {\n    var isShown = this.props.isShown;\n    this.appendYaRTB();\n\n    return (\n      <span className={'banner-done ' + (isShown ? '': 'hide')}>\n        <div id=\"yandex_rtb_R-A-292666-1\"></div>\n      </span>\n    );\n  }\n}\n\nexport default Banner;\n","import React from 'react';\n\nimport Banner from './Banner';\n\nclass DoneMessage extends React.Component {\n  sendAgain(e) {\n    e.preventDefault();\n    this.props.updateWishSentStatus(false);\n  }\n\n  render() {\n    var isWishSent = this.props.isWishSent;\n    var doneText = this.props.message.done;\n    var againText = this.props.message.again;\n\n    return (\n      <div className={'container-done-msg ' + (isWishSent ? '': 'hide')}>\n        <p>{doneText}</p>\n        <a href='#' className={'link '  + (isWishSent ? '': 'hide')} id='again'\n          onClick={this.sendAgain.bind(this)}>{againText}</a>\n        <Banner isShown={isWishSent} />\n      </div>\n    )\n  }\n}\n\nexport default DoneMessage;\n","import React from 'react';\n\nclass SendButton extends React.Component {\n    render() {\n        var className = this.props.className;\n\n        return (\n            <svg className={className} height='32' viewBox='0 0 64 64' width='32' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M47.964 8.127H16.036c-4.4 0-8 3.6-8 8v20.977c0 4.4 3.6 8 8\n                        8h7.397v10.768l13.333-10.768h11.197c4.4 0 8-3.6 8-8V16.127c0-4.4-3.6-8-8-8zm3\n                        28.977c0 1.626-1.374 3-3 3H35l-1.375 1.11-5.19 4.193v-5.303H16.036c-1.626\n                        0-3-1.374-3-3V16.127c0-1.626 1.374-3 3-3h31.928c1.626 0 3 1.374 3 3v20.977z'>\n                    </path>\n                    <circle cx='21.743' cy='26.617' r='2.913'></circle>\n                    <circle cx='32' cy='26.617' r='2.913'></circle>\n                    <circle cx='42.256' cy='26.617' r='2.913'></circle>\n            </svg>\n        );\n    }\n}\n\nexport default SendButton;\n","import axios from 'axios';\nimport React from 'react';\nimport ym from 'react-yandex-metrika';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nimport SendButton from '../SendButton/SendButton';\n\nclass WishForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      wish: '',\n    };\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleWishChange = this.handleWishChange.bind(this);\n    this.sendWish = this.sendWish.bind(this);\n    this.executeCaptcha = this.executeCaptcha.bind(this);\n    this.recaptchaRef = React.createRef();\n\n    axios.defaults.headers.post['Content-Type'] = 'application/json';\n  }\n\n  handleWishChange(e) {\n    this.setState({wish: e.target.value});\n  }\n\n  handleFocus(e) {\n    this.props.updateWishFormFocus(true);\n    this.props.wishType ? ym('reachGoal', `INPUT_FOCUS_${this.props.wishType}`) : ym('reachGoal', 'INPUT_FOCUS');\n  }\n\n  handleBlur(e) {\n    this.props.updateWishFormFocus(false);\n  }\n\n  executeCaptcha = function (e) {\n    e.preventDefault();\n    this.recaptchaRef.current.execute();\n  };\n\n  sendWish() {\n    this.props.wishType ? ym('reachGoal', `WISH_${this.props.wishType}`) : ym('reachGoal', 'WISH');\n    var clientId = 'anon'\n    if (window['yaCounter33316388'])\n         clientId = window['yaCounter33316388'].getClientID();\n\n    var url = 'https://hello.wishbox.space/api/wishes';\n//    var url = 'http://127.0.0.1:5000/api/wishes';\n\n    var reCaptchaResponse = this.recaptchaRef.current.getValue();\n    axios.post(url, {\n      text: this.state.wish,\n      external_user_id: clientId,\n      recaptcha_token: reCaptchaResponse,\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n    this.setState({wish: ''});\n    this.props.updateWishSentStatus(true);\n    this.recaptchaRef.current.reset();\n  }\n\n  render() {\n    var isWishSent = this.props.isWishSent;\n    var isWishFormInFocus = this.props.isWishFormInFocus;\n    var placeholderText = this.props.placeholder;\n\n    return (\n        <form className={'container-form ' + (isWishSent ? 'hide': '')} onSubmit={this.executeCaptcha}>\n            <input className='container-form-input' type='text' placeholder={placeholderText}\n                value={this.state.wish} onChange={this.handleWishChange}\n                onFocus={this.handleFocus} onBlur={this.handleBlur}/>\n            <ReCAPTCHA\n              ref={this.recaptchaRef}\n              sitekey='6LfRWDsUAAAAAIDgXusXVA7JmuSbmWlStqLkSFal'\n              size='invisible'\n              theme='dark'\n              onChange={this.sendWish}\n            />\n            <button className={'container-form-button ' + (isWishFormInFocus ? 'focused':'')}\n                disabled={!this.state.wish}>\n                <SendButton className='container-form-button-icon'/>\n            </button>\n        </form>\n        );\n  }\n}\n\nexport default WishForm;\n","import React from 'react';\n\nclass SocialShare extends React.Component {\n  render() {\n    var isHide = this.props.isHide;\n    var socialServices= 'vkontakte,facebook,odnoklassniki,twitter,viber,whatsapp,telegram';\n    var socialTitle = this.props.social.title;\n    var socialText = this.props.social.text;\n\n    return (\n        <div className={'ya-share2 ' + (isHide ? 'hide':'')}\n          data-services={socialServices}\n          data-title={socialTitle}\n          data-description={socialText}>\n        </div>\n    );\n  }\n}\n\nexport default SocialShare;\n","import React from 'react';\n\nimport SocialShare from '../SocialShare/SocialShare';\n\nclass WishCounter extends React.Component {\n  render() {\n    var isWishFormInFocus = this.props.isWishFormInFocus;\n\n    return (\n      <div className={'container-counter ' + (isWishFormInFocus ? 'hide':'')}>\n        <p>{this.props.recipient} уже позаботился о <strong>{this.props.wishCount}</strong> запросах</p>\n        <p>Если рассказать об этом друзьям, счастливых людей станет больше</p>\n        <SocialShare social={this.props.social} isHide={isWishFormInFocus} />\n      </div>\n    );\n  }\n}\n\nexport default WishCounter;\n","import React from 'react';\nimport ym from 'react-yandex-metrika';\n\nclass TipAccordion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: true,\n    };\n\n    this.uncollapse = this.uncollapse.bind(this)\n  }\n\n  uncollapse(e) {\n    e.preventDefault();\n    this.setState({collapsed: !this.state.collapsed});\n    this.props.wishType ? ym('reachGoal', `TIP_${this.props.wishType}`) : ym('reachGoal', 'TIP');\n  }\n\n  render() {\n    var isWishFormInFocus = this.props.isWishFormInFocus;\n    var tipText = this.props.tip.text;\n    var tipTitle = this.props.tip.title;\n\n    return (\n      <div className='accordion'>\n        <div className='accordion-section'>\n          <a href='#tip' className={'accordion-section-title ' + (isWishFormInFocus ? 'hide':'')}\n            onClick={this.uncollapse}>{tipTitle}</a>\n          <div id='tip'\n            className={'accordion-section-content ' + (this.state.collapsed ? '' : 'active ') + (isWishFormInFocus ? 'hide ': '')}>\n            {tipText}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TipAccordion;\n","import axios from 'axios';\nimport React from 'react';\n\nimport './Wish.css';\n\nimport WishHeader from './WishHeader';\nimport DoneMessage from './DoneMessage';\nimport WishForm from './WishForm';\nimport WishCounter from './WishCounter';\nimport TipAccordion from './TipAccordion';\n\n\nclass Wish extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      wishFormInFocus: false,\n      wishSent: false,\n      wishCount: 0,\n    };\n    this.updateWishFormFocus = this.updateWishFormFocus.bind(this)\n    this.updateWishSentStatus = this.updateWishSentStatus.bind(this)\n    this.loadWishesCounter = this.loadWishesCounter.bind(this)\n\n  }\n\n  updateWishSentStatus(status) {\n    this.setState({wishSent: status});\n    if (status)\n      this.setState({'wishCount': ++this.state.wishCount});\n  }\n\n  updateWishFormFocus(inFocus) {\n    this.setState({wishFormInFocus: inFocus});\n  }\n\n  loadWishesCounter() {\n    var url = 'https://hello.wishbox.space/api/wishes';\n//    var url = 'http://127.0.0.1:5000/api/wishes';\n    axios.get(url)\n      .then(response => {\n        console.log(response);\n        var count = (response.data.status === 'success' ? response.data.data.count : 0);\n        count = (count < 832 ? count + 832 : count);\n        this.setState({'wishCount': count});\n        })\n      .catch(error => {\n        console.log(error);\n        this.setState({'wishCount': 832});\n    });\n  }\n\n  componentDidMount() {\n    this.loadWishesCounter();\n  }\n\n  render() {\n    return (\n        <div className={this.props.rootDivClassName}>\n            <WishHeader\n                isWishSent={this.state.wishSent}\n                isWishFormInFocus={this.state.wishFormInFocus}\n                title={this.props.topTitle}\n            />\n            <DoneMessage\n                isWishSent={this.state.wishSent}\n                updateWishSentStatus={this.updateWishSentStatus}\n                message={this.props.doneMessage}\n            />\n            <WishForm\n                isWishSent={this.state.wishSent}\n                updateWishSentStatus={this.updateWishSentStatus}\n                isWishFormInFocus={this.state.wishFormInFocus}\n                updateWishFormFocus={this.updateWishFormFocus}\n                placeholder={this.props.wishInputPlaceholder}\n                wishType={this.props.wishType}\n            />\n            <WishCounter\n                isWishFormInFocus={this.state.wishFormInFocus}\n                wishCount={this.state.wishCount}\n                recipient={this.props.recipient}\n                social={this.props.social}\n            />\n            <TipAccordion\n                isWishFormInFocus={this.state.wishFormInFocus}\n                tip={this.props.tip}\n            />\n        </div>\n    );\n  }\n}\n\nexport default Wish;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Wish from './components/Wish/Wish';\nimport SendButton from './components/SendButton/SendButton';\n\nclass App extends Component {\n//<p>Дед Мороз уже получил <strong>{wishCount}</strong> желаний</p>\n//<p>Вселенная позаботилась уже о <strong>{wishCount}</strong> запросах</p>\n  render() {\n    const originalContext = {\n        wishType: '',\n        rootDivClassName: 'container wish',\n        topTitle: 'Хочу, чтобы...',\n        doneMessage: {\n            done: 'Запрос ушел Космосу, теперь осталось расслабиться и перестань об этом думать. Все будет хорошо!',\n            again: 'Но лучше загадать еще одно желание',\n        },\n        wishInputPlaceholder: '... формулируй, космос ждет',\n        tip: {\n            title: 'Что здесь происходит?',\n            text:  <span>\n                'Хочу, хочу, хочу!'. Мы постоянно загадываем желания.\n                Трем носы и пальцы городским достопримечательностям, портим праздничное шампанское, ловим \"22:22\"\n                на часах. А они, заветные, все не сбываются. Что делать и как с этим бороться? Очень просто.\n                Перестать на них фокусироваться. Отправить запрос и заниматься своими делами.\n                Он обязательно дойдет куда надо и запишется на исполнение. Для этого всего лишь нужно\n                сформулировать его очень-очень конкретно, в позитивной формулировке (без всяких \"не\"),\n                записать в окошко сверху, нажать кнопку <SendButton/> и <em>забыть</em>.\n                Космос позаботится о Ваших желаниях. <span>Он уже начал.</span>\n              </span>,\n        },\n        recipient: 'Космос',\n        social: {\n            title: 'Расскажите Космосу о своей мечте',\n            text: 'Как сделать так, чтобы заветное желание исполнилось? Попросить об этом Космос!',\n        }\n      };\n    const newYearContext = {\n        wishType: 'ny',\n        rootDivClassName: 'container wish new-year',\n        topTitle: 'Дорогой Дедушка Мороз, ...',\n        doneMessage: {\n            done: 'Желание ушло Деду Морозу. Продолжай хорошо себя вести и оно обязательно сбудется! А если ты весь год был хорошим мальчиком или девочкой, ',\n            again: 'можешь загадать еще одно.',\n        },\n        wishInputPlaceholder: '... формулируй, дедушка ждет',\n        tip: {\n            title: 'Как загадать желание на Новый год?',\n            text: <span>\n                Все очень просто. Под новый год нужно мечтать широко и загадывать самое заветное!\n                А чтобы Дед Мороз не ошибся, сформулируй желание очень-очень конкретно, в позитивной формулировке\n                (без всяких 'не'), запиши в окошко вверху, и нажми кнопку <SendButton/>. Все!\n                Дедушка Мороз позаботится о твоих желаниях.\n              </span>,\n        },\n        recipient: 'Дед Мороз',\n        social: {\n            title: 'Расскажите Деду Морозу о своем желании',\n            text: 'Как исполнить желание на Новый год? Попросить об этом Деда Мороза!',\n        }\n      };\n\n      return(\n          <Switch>\n            <Route path='/' exact key='original' render={() => <Wish {...originalContext} />} />\n            <Route path='/ded_moroz' exact key='newYear' render={() => <Wish {...newYearContext} />} />\n          </Switch>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { YMInitializer } from 'react-yandex-metrika';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <>\n    <YMInitializer accounts={[33316388]} options={{webvisor: true}} />\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}